# depends_on: api, web
FROM nginx:1.19.6

# You're required to add your own SSL certificates/keys to the `./nginx/ssl` directory
# and modify the env vars below in .env if HTTPS_ENABLED is true.
ENV NGINX_SERVER_NAME=${NGINX_SERVER_NAME:-_}
ENV NGINX_HTTPS_ENABLED=${NGINX_HTTPS_ENABLED:-false}
ENV NGINX_SSL_PORT=${NGINX_SSL_PORT:-443}
ENV NGINX_PORT=${NGINX_PORT:-80}
ENV NGINX_SSL_CERT_FILENAME=${NGINX_SSL_CERT_FILENAME:-dify.crt}
ENV NGINX_SSL_CERT_KEY_FILENAME=${NGINX_SSL_CERT_KEY_FILENAME:-dify.key}
ENV NGINX_SSL_PROTOCOLS=${NGINX_SSL_PROTOCOLS:-TLSv1.1\ TLSv1.2\ TLSv1.3}
ENV NGINX_WORKER_PROCESSES=${NGINX_WORKER_PROCESSES:-auto}
ENV NGINX_CLIENT_MAX_BODY_SIZE=${NGINX_CLIENT_MAX_BODY_SIZE:-15M}
ENV NGINX_KEEPALIVE_TIMEOUT=${NGINX_KEEPALIVE_TIMEOUT:-65}
ENV NGINX_PROXY_READ_TIMEOUT=${NGINX_PROXY_READ_TIMEOUT:-3600s}
ENV NGINX_PROXY_SEND_TIMEOUT=${NGINX_PROXY_SEND_TIMEOUT:-3600s}
ENV NGINX_SERVER_PROXY_PASS_API=${NGINX_SERVER_PROXY_PASS_API:-api}
ENV NGINX_SERVER_PROXY_PASS_WEB=${NGINX_SERVER_PROXY_PASS_WEB:-web}

# work directory
WORKDIR /etc/nginx

# copy files
COPY ./docker/nginx/nginx.conf.template /etc/nginx/nginx.conf.template
COPY ./docker/nginx/proxy.conf.template /etc/nginx/proxy.conf.template
COPY ./docker/nginx/https.conf.template /etc/nginx/https.conf.template
COPY ./docker/nginx/conf.d /etc/nginx/conf.d
COPY ./docker/nginx/ssl /etc/ssl
COPY ./docker/volumes/certbot/conf/live /etc/letsencrypt/live
COPY ./docker/volumes/certbot/conf /etc/letsencrypt
COPY ./docker/volumes/certbot/www /var/www/html

# copy entrypoint file
COPY ./docker/nginx/docker-entrypoint.sh /docker-entrypoint-mount.sh

# file as executable
RUN chmod +x /docker-entrypoint-mount.sh

EXPOSE 80 443

# entrypoint
ENTRYPOINT ["sh", "-c", "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh"]
